[{"C:\\Users\\Ika\\Desktop\\literary-association\\banks\\bank-a-frontend\\src\\index.js":"1","C:\\Users\\Ika\\Desktop\\literary-association\\banks\\bank-a-frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Ika\\Desktop\\literary-association\\banks\\bank-a-frontend\\src\\App.js":"3"},{"size":517,"mtime":1608556164296,"results":"4","hashOfConfig":"5"},{"size":375,"mtime":1608556164298,"results":"6","hashOfConfig":"5"},{"size":6130,"mtime":1608577306558,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"2pvpyi",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"C:\\Users\\Ika\\Desktop\\literary-association\\banks\\bank-a-frontend\\src\\index.js",[],["16","17"],"C:\\Users\\Ika\\Desktop\\literary-association\\banks\\bank-a-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Ika\\Desktop\\literary-association\\banks\\bank-a-frontend\\src\\App.js",["18","19"],"import {Button, Form} from \"react-bootstrap\";\r\nimport './App.css';\r\nimport {useState, useEffect} from 'react';\r\n\r\nfunction  App() {\r\n\r\n  const [payment, setPayment] = useState(\"\");\r\n  const [pan, setPan] = useState(\"\");\r\n  const [securityCode, setSecurityCode] = useState(\"\");\r\n  const [cardholderName, setCardholderName] = useState(\"\");\r\n  const [expireMonth, setExpireMonth] = useState(\"\");\r\n  const [expireYear, setExpireYear] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const url = (window.location.href).split(\"/\");\r\n    const options = {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n    };\r\n    fetch(\"http://localhost:8084/transaction/payment/\" + url[3], options)\r\n    .then(response => response.json())\r\n    .then(data => setPayment(data));\r\n\r\n  }, [])\r\n\r\n  const handleSubmit = () => {\r\n    let formData = {\r\n      pan: pan,\r\n      securityCode: securityCode,\r\n      cardholderName: cardholderName,\r\n      expireDate: expireMonth + \"/\" + expireYear\r\n    }\r\n    const url = 'http://localhost:8084/transaction/' + payment.id;\r\n    const options = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(formData)\r\n    };\r\n    fetch(url, options)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n       console.log(data);\r\n    })\r\n    .catch(error => console.log(error));\r\n  }\r\n\r\n  const panOnChangeHandler = (value) => {  \r\n    setPan(value);  \r\n  }\r\n\r\n  const securityCodeOnChangeHandler = (value) => {\r\n    setSecurityCode(value);\r\n  }\r\n\r\n  const cardholderOnChangeHandler = (value) => {\r\n    setCardholderName(value);\r\n  }\r\n\r\n  const expireMonthOnChangeHandler = (value) => {\r\n    setExpireMonth(value);\r\n  }\r\n\r\n  const expireYearOnChangeHandler = (value) => {\r\n    setExpireYear(value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"App-header\">\r\n        <div className=\"w-25\">\r\n          <h1>Bank A</h1>\r\n          { payment &&\r\n            <>\r\n              <h4 className=\"text-warning\">Merchant : {payment.merchant.companyName}</h4>\r\n              <h4 className=\"text-warning mb-5\">Amount : {payment.amount} $</h4>\r\n            </>\r\n          }\r\n          <h5>Enter your card information here</h5>\r\n        </div>\r\n        <Form className=\"p-3 w-25\">\r\n          <Form.Group className=\"row mb-3 p-2\">\r\n            <Form.Label className=\"w-50\" style={{marginTop:\"5px\"}}>PAN:</Form.Label>\r\n            <Form.Control className=\"w-50\" autoComplete=\"off\" maxLength=\"19\"\r\n            type=\"text\" placeholder=\"Enter PAN\" onChange={(e) => panOnChangeHandler(e.target.value)} />\r\n          </Form.Group>\r\n          <Form.Group className=\"row mb-3 p-2\">\r\n            <Form.Label className=\"w-50\" style={{marginTop:\"5px\"}}>Security code:</Form.Label>\r\n            <Form.Control className=\"w-50\" type=\"text\"\r\n            placeholder=\"Enter security code\" onChange={(e) => securityCodeOnChangeHandler(e.target.value)} />\r\n          </Form.Group>\r\n          <Form.Group className=\"row mb-3 p-2\">\r\n            <Form.Label className=\"w-50\" style={{marginTop:\"5px\"}}>Cardholder name:</Form.Label>\r\n            <Form.Control className=\"w-50\" type=\"text\"\r\n            placeholder=\"Enter cardholder name\" onChange={(e) => cardholderOnChangeHandler(e.target.value)} />\r\n          </Form.Group>\r\n          <Form.Group className=\"row mb-3 p-2\">\r\n            <Form.Label className=\"w-50\" style={{marginTop:\"5px\"}}>Expire date:</Form.Label>\r\n            <div className=\"row float-right\"  style={{width:\"50%\"}} >\r\n              <select className=\"form-select\" style={{width:\"60px\"}} onChange={(e) => expireMonthOnChangeHandler(e.target.value)}>\r\n                <option value=\"\">--</option>\r\n                <option value=\"01\">01</option>\r\n                <option value=\"02\">02</option>\r\n                <option value=\"03\">03</option>\r\n                <option value=\"04\">04</option>\r\n                <option value=\"05\">05</option>\r\n                <option value=\"06\">06</option>\r\n                <option value=\"07\">07</option>\r\n                <option value=\"08\">08</option>\r\n                <option value=\"09\">09</option>\r\n                <option value=\"10\">10</option>\r\n                <option value=\"11\">11</option>\r\n                <option value=\"12\">12</option>\r\n              </select>\r\n              <select className=\"form-select\" style={{width:\"80px\", marginLeft:\"10px\"}} onChange={(e) => expireYearOnChangeHandler(e.target.value)}>\r\n                <option value=\"\">----</option>\r\n                <option value=\"20\">2020</option>\r\n                <option value=\"21\">2021</option>\r\n                <option value=\"22\">2022</option>\r\n                <option value=\"23\">2023</option>\r\n                <option value=\"24\">2024</option>\r\n                <option value=\"25\">2025</option>\r\n                <option value=\"26\">2026</option>\r\n                <option value=\"27\">2027</option>\r\n                <option value=\"28\">2028</option>\r\n                <option value=\"29\">2029</option>\r\n                <option value=\"30\">2030</option>\r\n                <option value=\"31\">2031</option>\r\n                <option value=\"32\">2032</option>\r\n                <option value=\"33\">2033</option>\r\n                <option value=\"34\">2034</option>\r\n                <option value=\"35\">2035</option>\r\n                <option value=\"36\">2036</option>\r\n                <option value=\"37\">2037</option>\r\n                <option value=\"38\">2038</option>\r\n                <option value=\"39\">2039</option>\r\n              </select>\r\n            </div>\r\n          </Form.Group>\r\n          <div className=\"row\" style={{marginLeft:\"-25px\", marginRight:\"-25px\"}}>\r\n            <div className=\"col-6\">\r\n              <Button variant=\"success\" onClick={() => handleSubmit()} className=\"btn btn-primary button w-100\">Pay</Button>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <Button className=\"button  w-100\">Cancel</Button>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default App;\r\n",{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","severity":1,"message":"25","line":13,"column":10,"nodeType":"26","messageId":"27","endLine":13,"endColumn":15},{"ruleId":"24","severity":1,"message":"28","line":13,"column":17,"nodeType":"26","messageId":"27","endLine":13,"endColumn":25},"no-native-reassign",["29"],"no-negated-in-lhs",["30"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'setError' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]